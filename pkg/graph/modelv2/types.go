// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package modelv2

type Query struct {
}

type SpecRun struct {
	ID              *int    `json:"id,omitempty"`
	SuiteID         *int    `json:"suiteId,omitempty"`
	SpecDescription *string `json:"specDescription,omitempty"`
	Status          *string `json:"status,omitempty"`
	Message         *string `json:"message,omitempty"`
	StartTime       *string `json:"startTime,omitempty"`
	EndTime         *string `json:"endTime,omitempty"`
	Tags            []*Tag  `json:"tags" gorm:"many2many:spec_run_tags;"`
}

type SuiteRun struct {
	ID        int        `json:"id"`
	TestRunID int        `json:"testRunId"`
	SuiteName *string    `json:"suiteName,omitempty"`
	StartTime *string    `json:"startTime,omitempty"`
	EndTime   *string    `json:"endTime,omitempty"`
	SpecRuns  []*SpecRun `json:"spec_runs" gorm:"foreignKey:SuiteID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE"`
}

type Tag struct {
	ID   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

type TestRun struct {
	ID              int         `json:"id"`
	TestProjectName *string     `json:"testProjectName,omitempty"`
	TestSeed        *int        `json:"testSeed,omitempty"`
	StartTime       *string     `json:"startTime,omitempty"`
	EndTime         *string     `json:"endTime,omitempty"`
	SuiteRuns       []*SuiteRun `json:"suite_runs" gorm:"foreignKey:TestRunID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE"`
}

type TestRunFilter struct {
	ID              *int    `json:"id,omitempty"`
	TestProjectName *string `json:"testProjectName,omitempty"`
}
